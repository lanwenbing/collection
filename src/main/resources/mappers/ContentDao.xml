<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.collections.dao.ContentDao">
     
    <!-- 查询文章类型 -->
    <select id="queryTypes" resultType="com.collections.model.TypeModel">
        select id, type, `desc` from articletype
    </select> 
     
    <!-- 查询内容 -->
    <select id="queryContent" parameterType="int" resultType="com.collections.model.ContentModel">
        select id, content, title, keywords, type_id as typeId, image_dir as imageDir from article where id=#{id}
    </select> 
    
     <!-- 根据文章类型和文章的关键字查询文章 -->
    <select id="queryCatalog" resultType="com.collections.model.ContentModel">
        select a.id, a.content, type.id as typeId, a.title, a.keywords, a.image_dir as imageDir from article a, articletype type 
        where a.type_id = type.id 
        and 
        case when #{0, jdbcType=INTEGER} = '' then true
        else type.id = #{0, jdbcType=INTEGER} end 
        and 
        case when #{1, jdbcType=VARCHAR} = '' then true
        else lower(a.keywords) like #{1, jdbcType=VARCHAR} end
        order by a.type_id asc limit #{2, jdbcType=INTEGER},#{3, jdbcType=INTEGER}
    </select>
     <!-- total count of catalog -->
    <select id="catalogTotalCount" resultType="int">
        select count(*) from article a, articletype type 
        where a.type_id = type.id
        and 
        case when #{0, jdbcType=INTEGER} = '' then true
        else type.id = #{0, jdbcType=INTEGER} end 
        and 
        case when #{1, jdbcType=VARCHAR} = '' then true
        else lower(a.keywords) like #{1, jdbcType=VARCHAR} end
    </select>
    
    <insert id="saveContent" parameterType="com.collections.model.ContentModel" keyProperty="id">
    	insert into article(content, title, keywords, type_id, image_dir) values(#{content}, #{title}, #{keywords}, #{typeId}, #{imageDir})
    </insert>
    <update id="updateContent" parameterType="com.collections.model.ContentModel" keyProperty="id">
    	update article set content = #{content}, title = #{title}, keywords = #{keywords}, type_id=#{typeId}, image_dir=#{imageDir} where id = #{id}
    </update>
</mapper>